**Scripts:**

1. **Face Recognition Script (OpenCV):**
   - **Script Name:** `face_recognition.py`
   - **Description:** Uses OpenCV for face recognition. Captures video, detects faces, and marks them with rectangles.
   - **Dependencies:** `opencv-python`

2. **Voice Recognition Script (SpeechRecognition and PyAudio):**
   - **Script Name:** `voice_recognition.py`
   - **Description:** Utilizes SpeechRecognition and PyAudio for voice recognition. Records audio, saves as WAV, and transcribes speech.
   - **Dependencies:** `SpeechRecognition`, `sounddevice`

3. **Combined Script (Face and Voice Recognition):**
   - **Script Name:** `smart_attendance_system.py`
   - **Description:** Combines face and voice recognition. Uses OpenCV for face recognition and SpeechRecognition with PyAudio for voice recognition. Marks attendance on "Clock In."
   - **Dependencies:** `opencv-python`, `SpeechRecognition`, `sounddevice`

4. **Additional Utility Script (Optional - for audio recording and processing):**
   - **Script Name:** `audio_utils.py`
   - **Description:** Contains helper functions for audio recording and processing.
   - **Dependencies:** `sounddevice`, `wave`

**Libraries:**

1. **OpenCV:**
   - **Library Name:** `opencv-python`
   - **Description:** Computer vision library for face detection and recognition.

2. **SpeechRecognition:**
   - **Library Name:** `SpeechRecognition`
   - **Description:** Enables speech recognition from audio input.

3. **PyAudio:**
   - **Library Name:** `sounddevice`
   - **Description:** Used for audio input/output operations, especially for recording from the microphone.

4. **Tkinter:**
   - **Library Name:** `tkinter`
   - **Description:** Standard GUI toolkit for building the project's user interface.

5. **SQLite3:**
   - **Library Name:** `sqlite3`
   - **Description:** Lightweight, self-contained relational database engine for storing attendance data.

6. **Threading:**
   - **Library Name:** `threading`
   - **Description:** Used for implementing multithreading to enhance system performance.

7. **PIL (Pillow):**
   - **Library Name:** `Pillow`
   - **Description:** Used for image processing tasks, particularly in displaying the webcam feed in the Tkinter GUI.

8. **Wave:**
   - **Library Name:** `wave`
   - **Description:** Module for working with WAV audio files.
