**Scripts:**

1. **Face Recognition Script (OpenCV):**
   - **Script Name:** `face_recognition.py`
   - **Description:** This script uses the OpenCV library for face recognition. It captures video from the webcam, detects faces using the Haar Cascade 
       classifier, and marks them with rectangles.
   - **Dependencies:** OpenCV (`opencv-python`)

2. **Voice Recognition Script (SpeechRecognition and PyAudio):**
   - **Script Name:** `voice_recognition.py`
   - **Description:** This script utilizes SpeechRecognition and PyAudio to perform voice recognition. It records audio from the default microphone, saves it 
     as a temporary WAV file, and uses Google Speech Recognition to transcribe speech.
   - **Dependencies:** SpeechRecognition (`SpeechRecognition`), PyAudio (`sounddevice`)

3. **Combined Script (Face and Voice Recognition):**
   - **Script Name:** `smart_attendance_system.py`
   - **Description:** This script combines face and voice recognition to create a Smart Attendance System. It uses OpenCV for face recognition and 
      SpeechRecognition with PyAudio for voice recognition. The system marks attendance when it recognizes the command "Clock In."
   - **Dependencies:** OpenCV (`opencv-python`), SpeechRecognition (`SpeechRecognition`), PyAudio (`sounddevice`)

4. **Additional Utility Script (Optional - for audio recording and processing):**
   - **Script Name:** `audio_utils.py`
   - **Description:** This script may contain helper functions for audio recording and processing, depending on project requirements.
   - **Dependencies:** PyAudio (`sounddevice`), Wave (`wave`)

**Libraries:**

1. **OpenCV:**
   - **Library Name:** `opencv-python`
   - **Description:** OpenCV is used for computer vision tasks, including face detection and recognition.

2. **SpeechRecognition:**
   - **Library Name:** `SpeechRecognition`
   - **Description:** SpeechRecognition provides functionality for recognizing speech from audio input.

3. **PyAudio:**
   - **Library Name:** `sounddevice`
   - **Description:** PyAudio is used for audio input and output operations, such as recording audio from the microphone.

4. **Tkinter:**
   - **Library Name:** `tkinter`
   - **Description:** Tkinter is the standard GUI (Graphical User Interface) toolkit for Python, used for building the project's user interface.

5. **SQLite3:**
   - **Library Name:** `sqlite3`
   - **Description:** SQLite3 is a lightweight and self-contained relational database engine, used for storing attendance data.

6. **Threading:**
   - **Library Name:** `threading`
   - **Description:** Threading is used for implementing multithreading to enhance system performance.

7. **PIL (Pillow):**
   - **Library Name:** `Pillow`
   - **Description:** PIL (Python Imaging Library) is used for image processing tasks in the context of displaying webcam feed in the Tkinter GUI.

8. **Wave:**
   - **Library Name:** `wave`
   - **Description:** The `wave` module is used for working with WAV audio files.

These scripts and libraries collectively enable the Smart Attendance System to perform face and voice recognition, manage attendance data, and provide a user-friendly interface. Adjustments and customization can be made based on specific project requirements.
